services:
  configSrv:
    image: mongo:latest
    container_name: configSrv 
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.17
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb0-1:
    image: mongo:latest
    container_name: mongodb0-1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.18
    volumes:
      - mongodb0-1-data:/data/db
    depends_on:
      - mongos_router
    command:
      [
        "--shardsvr",
        "--replSet",
        "Replicaset0",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb0-2:
    image: mongo:latest
    container_name: mongodb0-2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.19
    volumes:
      - mongodb0-2-data:/data/db
    depends_on:
      - mongos_router
    command:
      [
        "--shardsvr",
        "--replSet",
        "Replicaset0",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb0-3:
    image: mongo:latest
    container_name: mongodb0-3
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.20
    volumes:
      - mongodb0-3-data:/data/db
    depends_on:
      - mongos_router
    command:
      [
        "--shardsvr",
        "--replSet",
        "Replicaset0",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb1-1:
    image: mongo:latest
    container_name: mongodb1-1
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.21
    volumes:
      - mongodb1-1-data:/data/db
    depends_on:
      - mongos_router
    command:
      [
        "--shardsvr",
        "--replSet",
        "Replicaset1",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb1-2:
    image: mongo:latest
    container_name: mongodb1-2
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.22
    volumes:
      - mongodb1-2-data:/data/db
    depends_on:
      - mongos_router
    command:
      [
        "--shardsvr",
        "--replSet",
        "Replicaset1",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb1-3:
    image: mongo:latest
    container_name: mongodb1-3
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.23
    volumes:
      - mongodb1-3-data:/data/db
    depends_on:
      - mongos_router
    command:
      [
        "--shardsvr",
        "--replSet",
        "Replicaset1",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s        

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.24
    depends_on:
      - configSrv
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.25
    environment:
      MONGODB_URL: "mongodb://mongos_router:27024"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/24

volumes:
  config-data:
  mongodb0-1-data:
  mongodb0-2-data:
  mongodb0-3-data:
  mongodb1-1-data:
  mongodb1-2-data:
  mongodb1-3-data:
